{"ast":null,"code":"var _jsxFileName = \"/home/benr@packtpub.net/Documents/triple-triad/components/game.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useCallback } from \"react\";\nimport Board from \"./board\";\nimport Deck from \"./deck\";\nconst flex = {\n  display: \"flex\"\n};\nconst defaultState = {\n  1: {\n    deck: [{\n      name: \"Tonberry\",\n      rarity: 1,\n      tribe: null,\n      stats: {\n        north: 2,\n        east: 2,\n        south: 7,\n        west: 2\n      }\n    }, {\n      name: \"Namazu\",\n      rarity: 1,\n      tribe: \"Beastman\",\n      stats: {\n        north: 1,\n        east: 6,\n        south: 1,\n        west: 5\n      }\n    }, {\n      name: \"Adamantoise\",\n      rarity: 2,\n      tribe: null,\n      stats: {\n        north: 5,\n        east: 7,\n        south: 4,\n        west: 4\n      }\n    }, {\n      name: \"Ultros & Typhon\",\n      rarity: 2,\n      tribe: null,\n      stats: {\n        north: 2,\n        east: 3,\n        south: 6,\n        west: 7\n      }\n    }, {\n      name: \"Garuda\",\n      rarity: 3,\n      tribe: \"Primal\",\n      stats: {\n        north: 7,\n        east: 6,\n        south: 1,\n        west: 7\n      }\n    }]\n  },\n  2: {\n    deck: [{\n      name: \"Chocobo\",\n      rarity: 1,\n      tribe: null,\n      stats: {\n        north: 3,\n        east: 7,\n        south: 2,\n        west: 1\n      }\n    }, {\n      name: \"Moogle\",\n      rarity: 1,\n      tribe: \"Beastman\",\n      stats: {\n        north: 2,\n        east: 1,\n        south: 3,\n        west: 7\n      }\n    }, {\n      name: \"Delivery Moogle\",\n      rarity: 2,\n      tribe: \"Beastman\",\n      stats: {\n        north: 5,\n        east: 5,\n        south: 6,\n        west: 3\n      }\n    }, {\n      name: \"Moglin\",\n      rarity: 3,\n      tribe: \"Beastman\",\n      stats: {\n        north: 8,\n        east: 5,\n        south: 4,\n        west: 5\n      }\n    }, {\n      name: \"Good King Moggle Mog XII\",\n      rarity: 3,\n      tribe: \"Primal\",\n      stats: {\n        north: 7,\n        east: 6,\n        south: 7,\n        west: 1\n      }\n    }]\n  },\n  board: Array(9).fill({\n    player: null,\n    card: {\n      name: null,\n      rarity: null,\n      tribe: null,\n      stats: {\n        north: null,\n        east: null,\n        south: null,\n        west: null\n      }\n    }\n  }),\n  turn: 1,\n  cardInHand: false,\n  indexOfCard: null\n};\n\nconst Game = () => {\n  const {\n    0: state,\n    1: updateState\n  } = useState(defaultState);\n  const onPickUp = useCallback((player, index) => {\n    if (player === state.turn) {\n      if (index === state.indexOfCard) {\n        updateState(_objectSpread({}, state, {\n          cardInHand: false,\n          indexOfCard: null\n        }));\n      } else {\n        updateState(_objectSpread({}, state, {\n          cardInHand: true,\n          indexOfCard: index\n        }));\n      }\n    }\n  }, [state]);\n  const onPutDown = useCallback(index => {\n    console.log(state.board[index].player);\n\n    if (state.cardInHand && !state.board[index].player) {\n      const player = state.turn;\n      const newBoard = [...state.board.slice(0, index), {\n        player: player,\n        card: state[player].deck[state.indexOfCard]\n      }, ...state.board.slice(index + 1)];\n      updateState(_objectSpread({}, state, {\n        board: newBoard,\n        cardInHand: false,\n        indexOfCard: null,\n        turn: state.turn % 2 + 1\n      }));\n    }\n  }, [state]);\n  return __jsx(\"div\", {\n    style: flex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, __jsx(Deck, {\n    player: 1,\n    deck: state[1].deck,\n    onClick: onPickUp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), __jsx(Board, {\n    board: state.board,\n    turn: state.turn,\n    onClick: onPutDown,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), __jsx(Deck, {\n    player: 2,\n    deck: state[2].deck,\n    onClick: onPickUp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }), `${state.cardInHand}`, `${state.indexOfCard}`, `${state.turn}`);\n};\n\nexport default Game;","map":{"version":3,"sources":["/home/benr@packtpub.net/Documents/triple-triad/components/game.js"],"names":["React","useState","useCallback","Board","Deck","flex","display","defaultState","deck","name","rarity","tribe","stats","north","east","south","west","board","Array","fill","player","card","turn","cardInHand","indexOfCard","Game","state","updateState","onPickUp","index","onPutDown","console","log","newBoard","slice"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\n\nimport Board from \"./board\";\nimport Deck from \"./deck\";\n\nconst flex = {\n  display: \"flex\"\n};\n\nconst defaultState = {\n  1: {\n    deck: [\n      {\n        name: \"Tonberry\",\n        rarity: 1,\n        tribe: null,\n        stats: { north: 2, east: 2, south: 7, west: 2 }\n      },\n      {\n        name: \"Namazu\",\n        rarity: 1,\n        tribe: \"Beastman\",\n        stats: { north: 1, east: 6, south: 1, west: 5 }\n      },\n      {\n        name: \"Adamantoise\",\n        rarity: 2,\n        tribe: null,\n        stats: { north: 5, east: 7, south: 4, west: 4 }\n      },\n      {\n        name: \"Ultros & Typhon\",\n        rarity: 2,\n        tribe: null,\n        stats: { north: 2, east: 3, south: 6, west: 7 }\n      },\n      {\n        name: \"Garuda\",\n        rarity: 3,\n        tribe: \"Primal\",\n        stats: { north: 7, east: 6, south: 1, west: 7 }\n      }\n    ]\n  },\n  2: {\n    deck: [\n      {\n        name: \"Chocobo\",\n        rarity: 1,\n        tribe: null,\n        stats: { north: 3, east: 7, south: 2, west: 1 }\n      },\n      {\n        name: \"Moogle\",\n        rarity: 1,\n        tribe: \"Beastman\",\n        stats: { north: 2, east: 1, south: 3, west: 7 }\n      },\n      {\n        name: \"Delivery Moogle\",\n        rarity: 2,\n        tribe: \"Beastman\",\n        stats: { north: 5, east: 5, south: 6, west: 3 }\n      },\n      {\n        name: \"Moglin\",\n        rarity: 3,\n        tribe: \"Beastman\",\n        stats: { north: 8, east: 5, south: 4, west: 5 }\n      },\n      {\n        name: \"Good King Moggle Mog XII\",\n        rarity: 3,\n        tribe: \"Primal\",\n        stats: { north: 7, east: 6, south: 7, west: 1 }\n      }\n    ]\n  },\n  board: Array(9).fill({\n    player: null,\n    card: {\n      name: null,\n      rarity: null,\n      tribe: null,\n      stats: { north: null, east: null, south: null, west: null }\n    }\n  }),\n  turn: 1,\n  cardInHand: false,\n  indexOfCard: null\n};\n\nconst Game = () => {\n  const [state, updateState] = useState(defaultState);\n\n  const onPickUp = useCallback(\n    (player, index) => {\n      if (player === state.turn) {\n        if (index === state.indexOfCard) {\n          updateState({\n            ...state,\n            cardInHand: false,\n            indexOfCard: null\n          });\n        } else {\n          updateState({\n            ...state,\n            cardInHand: true,\n            indexOfCard: index\n          });\n        }\n      }\n    },\n    [state]\n  );\n\n  const onPutDown = useCallback(\n    (index) => {\n      console.log(state.board[index].player);\n      if (state.cardInHand && !state.board[index].player) {\n        const player = state.turn;\n        const newBoard = [\n          ...state.board.slice(0, index),\n          {\n            player: player,\n            card: state[player].deck[state.indexOfCard]\n          },\n          ...state.board.slice(index + 1)\n        ];\n\n        updateState({\n          ...state,\n          board: newBoard,\n          cardInHand: false,\n          indexOfCard: null,\n          turn: (state.turn % 2) + 1\n        })\n      }\n    }, [state]\n  );\n\n  return (\n    <div style={flex}>\n      <Deck player={1} deck={state[1].deck} onClick={onPickUp} />\n\n      <Board board={state.board} turn={state.turn} onClick={onPutDown}/>\n\n      <Deck player={2} deck={state[2].deck} onClick={onPickUp} />\n\n      {`${state.cardInHand}`}\n      {`${state.indexOfCard}`}\n      {`${state.turn}`}\n    </div>\n  );\n};\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}